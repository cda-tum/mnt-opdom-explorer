[project]
name = "mnt-opdom-explorer"
description = "Explore Operational Domains of SiDB logic gates"
readme = "README.md"
authors = [
    { name = "Marcel Walter", email = "marcel.walter@tum.de" },
    { name = "Jan Drewniok", email = "jan.drewniok@tum.de" }
]
keywords = ["MNT", "field-coupled nanocomputing", "silicon dangling-bonds", "logic", "physical simulation", "design automation", "operational domain", "GUI"]
license = { file = "LICENSE.md" }
requires-python = ">=3.9"
dynamic = ["version"]


[build-system]
requires = [
    "hatchling>=1.27.0",
    "hatch-vcs>=0.4.0"
]
build-backend = "hatchling.build"


[tool.hatch.build.targets.wheel]
packages = ["src/mnt"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/mnt/opdom_explorer/_version.py"


[project.urls]
Repository = "https://github.com/cda-tum/mnt-opdom-explorer"
Homepage = "https://www.cda.cit.tum.de/research/nanotech/"
Issues = "https://github.com/cda-tum/mnt-opdom-explorer/issues"
Discussions = "https://github.com/cda-tum/mnt-opdom-explorer/discussions"

[tool.setuptools.packages.find]
include = ["core", "gui", "widgets"]

[tool.mypy]
files = ["core", "gui", "test", "noxfile.py"]
python_version = "3.8"
warn_unused_configs = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
strict = true
disallow_untyped_defs = false
explicit_package_bases = true
warn_unreachable = true

[tool.ruff]
line-length = 120
extend-include = ["*.ipynb"]
preview = true
unsafe-fixes = true

[tool.ruff.lint]
extend-select = [
    "A",           # flake8-builtins
    "ANN",         # flake8-annotations
    "ARG",         # flake8-unused-arguments
    "ASYNC",       # flake8-async
    "B",  "B904",  # flake8-bugbear
    "C4",          # flake8-comprehensions
#    "D",           # pydocstyle
    "EM",          # flake8-errmsg
    "EXE",         # flake8-executable
    "FA",          # flake8-future-annotations
    "FLY",         # flynt
    "FURB",        # refurb
    "I",           # isort
    "ICN",         # flake8-import-conventions
    "ISC",         # flake8-implicit-str-concat
    "LOG",         # flake8-logging-format
    "N",           # flake8-naming
    "NPY",         # numpy
    "PERF",        # perflint
    "PGH",         # pygrep-hooks
    "PIE",         # flake8-pie
    "PL",          # pylint
    "PT",          # flake8-pytest-style
    "PTH",         # flake8-use-pathlib
    "PYI",         # flake8-pyi
    "Q",           # flake8-quotes
    "RET",         # flake8-return
    "RSE",         # flake8-raise
    "RUF",         # Ruff-specific
    "SLF",         # flake8-self
    "SLOT",        # flake8-slots
    "SIM",         # flake8-simplify
    "TC",         # flake8-type-checking
    "TID",         # flake8-tidy-imports
    "TRY",         # tryceratops
    "UP",          # pyupgrade
    "YTT",         # flake8-2020
]
ignore = [
    "ISC001",  # Conflicts with formatter
    "E501",    # Line too long (Black is enough)
    "PLR",     # Design related pylint codes
    "S101",    # Use of assert detected
]
flake8-unused-arguments.ignore-variadic-names = true
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"src/mnt/opdom_explorer/__init__.py" = [
    "F403",  # Allow * imports on the top level
    "F405",  # Allow names from * imports on the top level
]
"*.pyi" = ["D"]  # pydocstyle
"*.ipynb" = [
    "D",    # pydocstyle
    "E402", # Allow imports to appear anywhere in Jupyter notebooks
    "I002", # Allow missing `from __future__ import annotations` import
]

[tool.ruff.lint.pydocstyle]
convention = "google"


[tool.uv]
reinstall-package = ["mqsc-lumina"]


[dependency-groups]
build = [
    "hatchling>=1.27.0",
    "hatch-vcs>=0.4.0",
]
docs = [
    "nox>=2024.10.9",

    "PyQt6==6.8.0",
    "matplotlib==3.9.0",
    "mnt.pyfiction==0.6.8",
    "pandas==2.2.3",
    "qtawesome==1.3.1",
    "scikit-learn==1.6.1",
]
test = [
    "nox>=2024.10.9",
    "pytest>=8.3.3",
    "pytest-console-scripts>=1.4.1",
    "pytest-cov>=6",

    "PyQt6==6.8.0",
    "matplotlib==3.9.0",
    "mnt.pyfiction==0.6.8",
    "pandas==2.2.3",
    "qtawesome==1.3.1",
    "scikit-learn==1.6.1",
]
dev = [
    { include-group = "build" },
    { include-group = "docs" },
    { include-group = "test" },
    "pre-commit==4.1.0",
]
