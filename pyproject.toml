[build-system]
requires = [
    "setuptools>=61",
    "setuptools_scm>=7",
]
build-backend = "setuptools.build_meta"

[project]
name = "opdom-explore"
description = "Explore Operational Domains of SiDB gates"
readme = "README.md"
authors = [
    { name = "Marcel Walter", email = "marcel.walter@tum.de" },
]
keywords = ["MNT", "field-coupled nanocomputing", "GUI"]
license = { file = "LICENSE" }
requires-python = ">=3.9"
version = "0.1.0"

dependencies = [
    "PyQt6>=6.0",
    "matplotlib==3.9.0",
    "mnt.pyfiction==0.6.3",
    "pandas==2.2.2",
    "PyQt6==6.7.1",
    "qtawesome==1.3.1"
]

[project.optional-dependencies]
test = [
    "pytest>=7.2",
    "coverage>=6.0",  # Ensure coverage is included for testing
]

[project.urls]
Source = 'https://github.com/cda-tum/opdom-explore'
Tracker = 'https://github.com/cda-tum/opdom-explore/issues'
Research = 'https://www.cda.cit.tum.de/research/fcn/'

[tool.setuptools.packages.find]
include = ["core", "gui", "widgets"]

[tool.mypy]
files = ["core", "gui", "test", "noxfile.py"]
python_version = "3.8"
warn_unused_configs = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
strict = true
disallow_untyped_defs = false
explicit_package_bases = true
warn_unreachable = true

[tool.ruff]
line-length = 120
extend-include = ["*.ipynb"]
preview = true
unsafe-fixes = true

[tool.ruff.lint]
extend-select = [
    "A",           # flake8-builtins
    "ANN",         # flake8-annotations
    "ARG",         # flake8-unused-arguments
    "ASYNC",       # flake8-async
    "B",  "B904",  # flake8-bugbear
    "C4",          # flake8-comprehensions
    "D",           # pydocstyle
    "EM",          # flake8-errmsg
    "EXE",         # flake8-executable
    "FA",          # flake8-future-annotations
    "FLY",         # flynt
    "FURB",        # refurb
    "I",           # isort
    "ICN",         # flake8-import-conventions
    "ISC",         # flake8-implicit-str-concat
    "LOG",         # flake8-logging-format
    "N",           # flake8-naming
    "NPY",         # numpy
    "PERF",        # perflint
    "PGH",         # pygrep-hooks
    "PIE",         # flake8-pie
    "PL",          # pylint
    "PT",          # flake8-pytest-style
    "PTH",         # flake8-use-pathlib
    "PYI",         # flake8-pyi
    "Q",           # flake8-quotes
    "RET",         # flake8-return
    "RSE",         # flake8-raise
    "RUF",         # Ruff-specific
    "SLF",         # flake8-self
    "SLOT",        # flake8-slots
    "SIM",         # flake8-simplify
    "TC",         # flake8-type-checking
    "TID",         # flake8-tidy-imports
    "TRY",         # tryceratops
    "UP",          # pyupgrade
    "YTT",         # flake8-2020
]
ignore = [
    "ISC001",  # Conflicts with formatter
    "E501",    # Line too long (Black is enough)
    "PLR",     # Design related pylint codes
    "S101",    # Use of assert detected
]
flake8-unused-arguments.ignore-variadic-names = true
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"*.pyi" = ["D"]  # pydocstyle
"*.ipynb" = [
    "D",    # pydocstyle
    "E402", # Allow imports to appear anywhere in Jupyter notebooks
    "I002", # Allow missing `from __future__ import annotations` import
]

[tool.ruff.lint.pydocstyle]
convention = "google"
